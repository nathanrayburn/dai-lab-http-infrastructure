version: '3.7'

services:
  reverse_proxy:
    image: traefik:v2.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.crt:/certs/traefik.crt"
      - "./traefik.key:/certs/traefik.key"
      - "./acme.json:/acme.json"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - web

  myapp:
    build: ./dai-static-web-server
    image: nginx-custom:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myapp.rule=Host(`localhost`)"
      - "traefik.http.routers.myapp.entrypoints=websecure"
      - "traefik.http.routers.myapp.tls.certresolver=myresolver"
      - "traefik.http.services.myapp.loadbalancer.server.port=80"
    volumes:
      - ./dai-static-web-server:/usr/share/nginx/html
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - web

networks:
  web:
    driver: overlay
